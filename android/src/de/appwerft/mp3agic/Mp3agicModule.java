/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.mp3agic;

import java.io.IOException;
import java.util.HashMap;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.io.TiBaseFile;
import org.appcelerator.titanium.io.TiFile;
import org.appcelerator.titanium.io.TiFileFactory;

import com.mpatric.mp3agic.InvalidDataException;
import com.mpatric.mp3agic.Mp3File;
import com.mpatric.mp3agic.UnsupportedTagException;

import ti.modules.titanium.filesystem.FileProxy;

import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;


@Kroll.module(name="Mp3agic", id="de.appwerft.mp3agic")
public class Mp3agicModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "Mp3agicModule";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public Mp3agicModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	public static TiBaseFile getTiBaseFileFromInput(Object readPath) {
		TiBaseFile inputFile = null;
		try {
			if (readPath instanceof TiFile) {
				Log.d(LCAT, "file is TiFile");
				inputFile = TiFileFactory.createTitaniumFile(((TiFile) readPath).getFile().getAbsolutePath(), false);
			} else {
				if (readPath instanceof FileProxy) {
					Log.d(LCAT, "file is FileProxy");
					inputFile = ((FileProxy) readPath).getBaseFile();
				} else {
					if (readPath instanceof TiBaseFile) {
						Log.d(LCAT, "file is TiBaseFile");
						inputFile = (TiBaseFile) readPath;
					} else {
						Log.d(LCAT, "file is String, Assume path provided");
						// Assume path provided
						inputFile = TiFileFactory.createTitaniumFile(readPath.toString(), false);
					}
				}
			}
			if (inputFile == null) {
				Log.d(LCAT, "inputFile is null");
				return null;
			}
			if (!inputFile.exists()) {
				Log.d(LCAT, "inputFile doesn't exists");
				return null;
			}
			return inputFile;

		} catch (Exception e) {
			HashMap<String, Object> errEvent = new HashMap<String, Object>();
			errEvent.put(TiC.PROPERTY_SUCCESS, false);
			errEvent.put("message", e.getMessage());
			Log.e(LCAT, e.getMessage());
		}
		return null;
	}
	
	public static Mp3File getID3fromMP3File(TiBaseFile inputFile) {
		try {
			return new Mp3File(inputFile.getNativeFile());
			
		} catch (UnsupportedTagException | InvalidDataException | IOException e) {
			Log.e(LCAT, e.getMessage());
			return null;
		}
	}

}

